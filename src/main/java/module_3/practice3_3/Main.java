/**
 Практика. Абстрактные классы и интерфейсы.
 Задача 1.
 1.	Создайте метод sumIntegers, который принимает два целочисленных значения типа Integer и возвращает их разницу.
 2.	Создайте метод multiplyDoubles, который принимает два числа с плавающей точкой типа Double и возвращает результат их деления.
 3.	Создайте метод convertToBinaryString, который принимает целочисленное значение типа Integer и возвращает его двоичное представление в виде строки. (Integer.toBinaryString)
 4.	Инициализируйте переменные обертки над примитивами (например, Integer, Double) и вызовите созданные методы для выполнения операций.
 5.	Выведите результаты операций на экран.

 Задача 2.
 Создать программу для управления транспортными средствами с использованием Enum класса для типов транспорта.
 1.	Создание класса Vehicle с полями vehicleId, transportType и методами setTransportType и getTransportType.
 2.	Создание метода isPublicTransport, который возвращает true, если тип транспорта является общественным (BUS, TRAIN), и false в противном случае.
 3.	Инициализация нескольких транспортных средств с разными типами.
 4.	Вывод на экран информации о транспортных средствах и их типах.
 5.	Вызов метода isPublicTransport для каждого транспортного средства и вывод результата.
 6.	Повторный вывод на экран информации о транспортных средствах, чтобы убедиться, что типы транспорта корректно обработаны.

 Задача 3.
 Создайте интерфейс Database, который содержит следующие методы для работы с базой данных:
 void connect(): устанавливает соединение с базой данных.
 void disconnect(): отключается от базы данных.
 void insert(String data): добавляет данные в базу данных.
 void update(String data): обновляет данные в базе данных.
 void delete(String data): удаляет данные из базы данных.

 Задача 4.
 Создайте абстрактный класс Animal, который имеет абстрактные методы makeSound() и move().
 Реализуйте этот класс в дочерних классах Dog, Cat и Bird, где каждый класс реализует свои звук и способ передвижения. Создайте метод Main и в нем проверьте работу классов.

 Задача 5.
 a)	Создайте интерфейс Shape, который содержит следующие методы:
 double calculateArea(): возвращает площадь фигуры.
 double calculatePerimeter(): возвращает периметр фигуры.

 b)	Создайте классы, реализующие интерфейс Shape:
 Circle:
 Поле radius (тип double): радиус окружности.
 Конструктор, принимающий радиус и инициализирующий поле radius.
 Переопределенные методы calculateArea() и calculatePerimeter() для окружности.

 Rectangle:
 Поле length (тип double): длина прямоугольника и  поле width (тип double): ширина прямоугольника.
 Конструктор, принимающий длину и ширину и инициализирующий соответствующие поля.
 Переопределенные методы calculateArea() и calculatePerimeter() для прямоугольника.

 c)	Определите интерфейс Resizable, содержащий метод resize(int percent). Circle и Rectangle должны реализовать интерфейс Resizable.
 Метод resize() должен изменять размер круга или прямоугольника на указанный процент. Создайте метод Main и в нем проверьте работу классов.

 Задача 6.
 Создайте интерфейс Logger, содержащий метод log(String message). Реализуйте интерфейс в классах ConsoleLogger и FileLogger,
 которые выводят сообщение в консоль и записывают в файл соответственно. Создайте класс Application, который использует объекты
 ConsoleLogger и FileLogger для логирования сообщений. Создайте метод Main и в нем проверьте работу классов.

 Задача 7.
 Создать программу для управления транспортными средствами с использованием Enum класса для типов транспорта.
 7.	Создание класса Vehicle с полями vehicleId, transportType и методами setTransportType и getTransportType.
 8.	Создание метода isPublicTransport, который возвращает true, если тип транспорта является общественным (BUS, TRAIN), и false в противном случае.
 9.	Инициализация нескольких транспортных средств с разными типами.
 10.	Вывод на экран информации о транспортных средствах и их типах.
 11.	Вызов метода isPublicTransport для каждого транспортного средства и вывод результата.
 12.	Повторный вывод на экран информации о транспортных средствах, чтобы убедиться, что типы транспорта корректно обработаны.

 Задача 8.
 Представьте, что вы разрабатываете систему управления умным домом. Вам необходимо создать иерархию классов для устройств
 в доме (например, светильники, кондиционеры, дверные замки) с возможностью управления ими через центральный контроллер.
 Создание абстрактного класса Device:
 •	Создайте абстрактный класс Device, который содержит абстрактные методы turnOn(), turnOff() и метод getStatus().
 •	Реализуйте в абстрактном классе основные свойства устройства, которые могут быть общими для всех устройств в умном доме.
 Определение интерфейса Controllable:
 •	Определите интерфейс Controllable, содержащий методы controlDevice() для управления устройствами и getStatus() для получения статуса устройства.
 Создание классов устройств:
 •	Создайте классы Light, AirConditioner и DoorLock, которые наследуются от Device и реализуют интерфейс Controllable.
 •	Для каждого класса устройства определите уникальные свойства и реализацию методов turnOn(), turnOff() и controlDevice() в соответствии с их функциональностью.
 Создание класса SmartHomeControl:
 •	Создайте класс SmartHomeControl, который содержит список управляемых устройств (например, в виде списка объектов Device или Controllable).
 •	Реализуйте методы для управления устройствами, такие как turnOnAllDevices(), turnOffAllDevices(), controlDeviceById(), которые будут использовать
 полиморфизм для работы с различными типами устройств.
 Пример использования системы управления умным домом:
 •	Создайте экземпляры классов устройств (например, светильник, кондиционер, замок) и добавьте их в объект SmartHomeControl.
 Вызовите методы управления устройствами (например, включение/выключение устройств, управление состоянием) с использованием методов класса SmartHomeControl.

 */


package module_3.practice3_3;

public class Main {
  public static void main(String[] args) {
    // Задача 1
    Integer a = 15, b = 5;
    Double x = 10.0, y = 2.0;
    System.out.println("Разница: " + WrapperOperations.sumIntegers(a, b));
    System.out.println("Деление: " + WrapperOperations.multiplyDoubles(x, y));
    System.out.println("Бинарный вид: " + WrapperOperations.convertToBinaryString(42));

    // Задача 2
    Vehicle bus = new Vehicle();
    bus.setTransportType(TransportType.BUS);
    System.out.println("Автобус общественный? " + bus.isPublicTransport());

    // Задача 4
    Animal dog = new Dog();
    dog.makeSound();

    // Задача 5
    Circle circle = new Circle(5);
    circle.resize(10);
    System.out.println("Площадь круга: " + circle.calculateArea());

    // Задача 6
    Logger consoleLogger = new ConsoleLogger();
    consoleLogger.log("Тестовое сообщение");

    // Задача 8
    Light livingRoomLight = new Light();
    livingRoomLight.turnOn();
  }
}
